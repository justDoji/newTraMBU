plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'jacoco'
    id "com.github.hierynomus.license"
}

apply plugin: 'io.spring.dependency-management'
apply from: "./gradle/docker.gradle"

ext { springBootVersion = '2.2.1.RELEASE' }


dependencies {
    compile project(':kernel')

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    // https://mvnrepository.com/artifact/com.google.re2j/re2j
    compile group: 'com.google.re2j', name: 're2j', version: '1.2'
    
    //MapStruct
    implementation "org.mapstruct:mapstruct:1.3.1.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
    
    //JACKSON
    runtime group: 'com.fasterxml.jackson.module', name: 'jackson-modules-java8', version: '2.10.1', ext: 'pom'

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'com.h2database', name: 'h2', version: '1.3.148'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.2.Final'

}

license {
    header rootProject.file('LICENSE_HEADER')
    strictCheck false
    exclude('**/*.txt')
}

springBoot {
    mainClassName = 'be.doji.productivity.trambu.timetracking.infra.TimetrackingApplication'
}

bootJar {
    manifest {
        attributes 'Start-Class': 'be.doji.productivity.trambu.timetracking.infra.TimetrackingApplication'
    }
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco.xml")
        csv.enabled false
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
}

license {
    header rootProject.file('LICENSE_HEADER')
    strictCheck true
}

